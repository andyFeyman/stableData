// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model StableATH {
  id String @id @default(auto())  @map("_id") @db.ObjectId
  createdAt  DateTime 
  volume BigInt
  marketCap BigInt
  volMarketCapRatio String
}

model DailyStable {
  id String @id @default(auto())  @map("_id") @db.ObjectId
  createdAt  DateTime @default(now())
  volume BigInt
  marketCap BigInt
  volMarketCapRatio String
  dailyVolumeWithATH String
  daysFromATH Int
}


model L2DailyData {
  id String @id @default(auto())  @map("_id") @db.ObjectId
  updateTime DateTime @default(now())
  dailyTransaction  Json?
  tpsNum Json?
  gasCost Json?

  @@index([updateTime]) // Add index on updateTime
}

//l2Name 必须是唯一的
model L2BasicData {
  id String @id @default(auto())  @map("_id") @db.ObjectId
  l2IconImg String
  l2Name L2Name @unique
  l2ExplorerLink String []
}

model L2CombinedData {
  id String @id @default(auto())  @map("_id") @db.ObjectId
  updateTime DateTime @default(now())
  l2DailyData Json?
  @@index([updateTime])
}

model L1DailyData {
  id String @id @default(auto())  @map("_id") @db.ObjectId
  updateTime DateTime @default(now()) 
  l1Name L1Name
  dailyTransaction  String @default("null")
  tpsNum String @default("null")
  gasCost String  @default("null")

  @@index([updateTime]) // Add index on updateTime
}

model L1BasicData {
  id String @id @default(auto())  @map("_id") @db.ObjectId
  l1Img String
  l1Name L1Name @unique
  l1ExplorerLink String 
}

model latestKeyData {
  id String @id @default(auto())  @map("_id") @db.ObjectId
  updateTime DateTime @default(now()) 
  btcMarketCap String
  btcMCTime String @default("null")
  tgaBalance String
  tgaTime String @default("null")
  usStockVol String
  stockTime String @default("null")
  h41Value String
  h41Time String @default("null")

  @@index([updateTime])
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String     @unique
  username  String     @unique
  createdAt DateTime   @default(now())
  credentials Credential[]
  isVerified    Boolean      @default(false)
  isSuperAdmin  Boolean      @default(false)
  isVip     Boolean      @default(false)
  failedLoginAttempts Int @default(0) // 失败尝试次数
  lockoutUntil  DateTime? // 锁定到期时间
}

model Credential {
  id             String    @id @map("_id")
  userId        String    @db.ObjectId
  user          User      @relation(fields: [userId], references: [id])
  publicKey     String
  counter       Int       // MongoDB 支持 Int，适合 WebAuthn counter
  deviceName    String?
  createdAt     DateTime  @default(now())
}

model TempUser {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String    @unique
  username      String
  createdAt     DateTime  @default(now())
  expiresAt     DateTime
}

model VerificationCode {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String
  code          String
  createdAt     DateTime  @default(now())
  expiresAt     DateTime
}

model EmailAttempt {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String    @unique
  failedAttempts Int @default(0)
  lockoutUntil  DateTime?
  updatedAt     DateTime  @updatedAt

}

enum L1Name{
  Bitcoin
  Ethereum
  Solana
  Binance
  Dogecoin
  Avalanche
  Sui
  Ton 
  Near
  Mantle
  Kaspa
}

enum L2Name{
  Arbitrum
  Base
  Optimistic
  Blast
  Zksync
  Linea
}


// model HistoryMarketData{
//   id String @id @default(auto())  @map("_id") @db.ObjectId

// }


// model CurrentMarketVol {
//    id String @id @default(auto())  @map("_id") @db.ObjectId

// }